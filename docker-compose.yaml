version: '3.8'

services:
  # Service for the Go application
  # app:
  #   build:
  #     context: . # Assumes your Go application's Dockerfile is in the current directory
  #     dockerfile: Dockerfile # Specify the Dockerfile name if it's not just 'Dockerfile'
  #   ports:
  #     - "8080:8080" # Map host port 8080 to container port 8080 (where your Go app listens)
  #   depends_on:
  #     - db # Ensures the database service starts before the app service
  #   environment:
  #     # Database connection environment variables for your Go application
  #     # Ensure these match the MySQL service configuration below
  #     DB_HOST: db        # Hostname of the database service within the Docker network
  #     DB_USER: user      # MySQL database user
  #     DB_PASSWORD: password # MySQL database password
  #     DB_NAME: loan_db   # MySQL database name
  #     DB_PORT: 3306      # Default MySQL port

  # Service for the MySQL database
  db:
    image: mysql:8.0 # Using MySQL 8.0 image
    ports:
      - "3306:3306" # Optional: Map host port 3306 to container port 3306 for direct access
    environment:
      MYSQL_ROOT_PASSWORD: root_password # Root password for MySQL (change in production!)
      MYSQL_DATABASE: loan_db          # Database name to be created
      MYSQL_USER: user                 # User for the database
      MYSQL_PASSWORD: password         # Password for the database user
    volumes:
      - db_data:/var/lib/mysql # Persistent volume for MySQL data to prevent data loss on container restart/removal
      # - ./mysql_init_scripts:/docker-entrypoint-initdb.d # Optional: Uncomment to add custom init scripts (e.g., .sql files)

# Define named volumes for persistent data
volumes:
  db_data: {} # Declares a named volume for the MySQL data
